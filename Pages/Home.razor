@page "/"
@using static MudBlazor.CategoryTypes
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using AvstickareBlazor.Models
@inject HttpClient Http
@inject NavigationManager Navigation
@inject TripService TripService
@inject IJSRuntime JS

<PageTitle>Start</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <h1>Gör din resa till ett äventyr!</h1>

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <MudAlert Severity="Severity.Error" Elevation="0" Dense="true" Class="mb-4">
            @ErrorMessage
        </MudAlert>
    }

    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
        <h2>Vart vill du resa?</h2>
        <MudTextField InputId="fromInput" T="string" Required="true" RequiredError="Du måste ange en startpunkt"
            @bind-Value="FromValue" Label="Från" Variant="Variant.Outlined" />

        <MudTextField InputId="ToInput" T="string" Required="true" RequiredError="Du måste ange en slutdestinaton"
            @bind-Value="ToValue" Label="Till" Variant="Variant.Outlined" />
        <MudButton OnClick="SendTripRequest" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowForward"
            Style="color: black;" Color="Color.Primary" Class="mt-6">Skapa rutt</MudButton>
    </MudForm>
</MudContainer>

@code
{
    private bool success;
    private string[] errors = { };
    private MudForm? form;
    public string? ErrorMessage { get; set; }

    public string? FromValue { get; set; }
    public string? ToValue { get; set; }

    private async Task SendTripRequest()
    {
        if (form is not null)
        {
            await form.Validate();
        }

        if(!success)
        {
            ErrorMessage = "Ruttplaneraren är inte korrekt ifylld.";
        }

        try
        {
            var result = await TripService.PlanTripAsync(FromValue, ToValue);
            Navigation.NavigateTo("/karta");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }


}