@page "/karta"
@inject IJSRuntime JS
@inject TripService TripService

<PageTitle>Karta</PageTitle>

@if (TripService.LatestTrip is null)
{
    <!--användare har ej fyllt i rutt-->
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudText Typo="Typo.h6">Ingen rutt har skapats ännu.</MudText>
        <MudText>Gå tillbaka till startsidan och skapa en resa för att se den på kartan.</MudText>
        <MudLink Href="/" Underline="Underline.Always" Class="d-flex align-center">
            <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Class="me-1" />
            Till startsidan
        </MudLink>
    </MudContainer>
}
else if (hasError)
{   
    <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
        <MudAlert Severity="Severity.Error" Elevation="1" Dense="true">
            @errorMessage
        </MudAlert>
    </MudContainer>
}
else if (isLoadingTrip)
{
    <!--rutt ifylld men laddas-->
    <div class="d-flex justify-center align-center" style="height: 100vh;">
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large" />
    </div>
}
else
{
    <div id="map" style="height:100vh; width:100vw;"></div>
}

@code {
    private bool isLoadingTrip = true;
    private bool hasError = false;
    private string? errorMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && TripService.LatestTrip is not null)
        {
            try
            {
                isLoadingTrip = false;
                //rendera <div id="map">
                StateHasChanged();

                //DOM hinner uppdatera
                await Task.Delay(50);
                await JS.InvokeVoidAsync("initMap");
                await JS.InvokeVoidAsync("drawTrip", TripService.LatestTrip?.Polyline, TripService.LatestTrip?.SuggestedPlaces);
            }
            catch (Exception)
            {
                hasError = true;
                errorMessage = "Kartan kunde inte laddas. Försök igen eller kontrollera din internetanslutning.";
                //rendera om så användaren ser meddelandet
                StateHasChanged();
            }
        }
    }
}
